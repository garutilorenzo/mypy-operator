version: '3.4'
services:

  operator_web:
    image: operator_web:dev
    build:
     context: operator_web/
     args:
       - http_proxy=$http_proxy
       - https_proxy=$http_proxy
    container_name: operator_web
    environment:
      - PATH=$PATH:/app/.local/bin/
      - PYTHONPATH=$PYTHONPATH:/app/src
      - BOTTLE_APP_ENVIRONMENT=dev
      - BOTTLE_APP_NAME=operator
    volumes:
      - ./src:/app/src
    command: ['python', 'operator/app.py']
    ports:
      - 8080:8080
    depends_on:
      - mongo
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "5"
    restart: always
  
  operator_server:
    image: operator_server:dev
    build:
     context: operator_server/
     args:
       - http_proxy=$http_proxy
       - https_proxy=$http_proxy
    container_name: operator_server
    environment:
      OPERATOR_URL: http://operator_web:8080
      OPERATOR_SECRET: 073ad6c8a937bc4ee208678997f2cc4c8fd2b285e1ebcb2955c038a86592c28a
      ORC_TOPOLOGY_USER: orc_client_user
      ORC_TOPOLOGY_PASSWORD: igh0iebiengie6Id7Ialooliequei0jo
    volumes:
      - ./src:/app/src
    command: ['mysqlsh', '--py', '-f', 'operator_srv.py']
    depends_on:
      - mongo
      - operator_web
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "5"
    restart: "no"
  
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mysql
      - MONGO_INITDB_ROOT_PASSWORD=operator
      - MONGO_INITDB_DATABASE=mysql_operator
    volumes:
      - type: volume
        source: mongo
        target: /data/db
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "5"
    restart: always
  
  mysql_node01:
    hostname: mysql_node01
    image: mysql_server:dev
    build:
     context: mysql_image/
     args:
       - http_proxy=$http_proxy
       - https_proxy=$http_proxy
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - type: volume
        source: mysql_node01
        target: /var/lib/mysql/
        volume:
          nocopy: true
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    environment:
       MYSQL_ROOT_PASSWORD: root_node1
       MYSQL_USER: test
       MYSQL_PASSWORD: P@ssw0rd1
       MYSQL_DATABASE: db_test
       CLUSTER_NAME: mysql-lab
       OPERATOR_URL: http://operator_web:8080
       OPERATOR_SECRET: 073ad6c8a937bc4ee208678997f2cc4c8fd2b285e1ebcb2955c038a86592c28a
  
  mysql_node02:
    hostname: mysql_node02
    image: mysql_server:dev
    build:
     context: mysql_image/
     args:
       - http_proxy=$http_proxy
       - https_proxy=$http_proxy
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - type: volume
        source: mysql_node02
        target: /var/lib/mysql/
        volume:
          nocopy: true
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    environment:
       MYSQL_ROOT_PASSWORD: root_node2
       MYSQL_USER: test
       MYSQL_PASSWORD: P@ssw0rd2
       MYSQL_DATABASE: db_test
       CLUSTER_NAME: mysql-lab
       OPERATOR_URL: http://operator_web:8080
       OPERATOR_SECRET: 073ad6c8a937bc4ee208678997f2cc4c8fd2b285e1ebcb2955c038a86592c28a

  mysql_node03:
    hostname: mysql_node03
    image: mysql_server:dev
    build:
     context: mysql_image/
     args:
       - http_proxy=$http_proxy
       - https_proxy=$http_proxy
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./data:/sql
      - type: volume
        source: mysql_node03
        target: /var/lib/mysql/
        volume:
          nocopy: true
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    environment:
       MYSQL_ROOT_PASSWORD: root_node3
       MYSQL_USER: test
       MYSQL_PASSWORD: P@ssw0rd3
       MYSQL_DATABASE: db_test
       CLUSTER_NAME: mysql-lab
       OPERATOR_URL: http://operator_web:8080
       OPERATOR_SECRET: 073ad6c8a937bc4ee208678997f2cc4c8fd2b285e1ebcb2955c038a86592c28a

  orchestrator:
    hostname: orchestrator
    image: openarkcode/orchestrator:latest
    volumes:
      - type: volume
        source: orchestrator
        target: /app/data
        volume:
          nocopy: true
    environment:
      ORC_TOPOLOGY_USER: orc_client_user
      ORC_TOPOLOGY_PASSWORD: igh0iebiengie6Id7Ialooliequei0jo
    ports:
      - "3000:3000"

volumes:
 mongo:
 mysql_node01:
 mysql_node02:
 mysql_node03:
 mysql_node04:
 orchestrator: